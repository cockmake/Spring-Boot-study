<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.forwardforever.springbegin.mapper.HeadlineMapper">

  <resultMap id="BaseResultMap" type="com.forwardforever.springbegin.domain.entity.Headline">
    <id property="hid" column="h_id" jdbcType="INTEGER"/>
    <result property="title" column="title" jdbcType="VARCHAR"/>
    <result property="article" column="article" jdbcType="VARCHAR"/>
    <result property="type" column="type" jdbcType="INTEGER"/>
    <result property="publisher" column="publisher" jdbcType="INTEGER"/>
    <result property="pageViews" column="page_views" jdbcType="INTEGER"/>
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    <result property="version" column="version" jdbcType="INTEGER"/>
    <result property="isDeleted" column="is_deleted" jdbcType="INTEGER"/>
  </resultMap>

  <sql id="Base_Column_List">
    h_id, title, article, type, publisher, page_views,
    create_time, update_time, version, is_deleted
  </sql>

  <select id="findArticleWithPastime" resultType="com.forwardforever.springbegin.domain.vo.HeadlineVO">
    select hid, title, type, page_views, TIMESTAMPDIFF(SECOND, create_time, now()) as pastime, u.nick_name as author,
    IF(publisher = #{userId}, 1, 0) as is_owner
    from news_headline h
    inner join news_user u on h.publisher = u.user_id
    where h.is_deleted = 0
    <if test="articleFindForm.keywords != null and articleFindForm.keywords != ''">
      and (title like concat('%', #{articleFindForm.keywords}, '%')
      or article like concat('%', #{articleFindForm.keywords}, '%'))
    </if>
    <if test="articleFindForm.tId != null">
      and type = #{articleFindForm.tid}
    </if>
    order by create_time desc
  </select>

  <select id="findArticleDetailById" resultType="com.forwardforever.springbegin.domain.vo.ArticleVO">
    select h.hid,
           h.title,
           h.article,
           h.version,
           h.type,
           t.t_name                                    type_name,
           h.publisher,
           u.nick_name                                 author,
           TIMESTAMPDIFF(SECOND, h.create_time, now()) pastime,
           h.page_views,
           h.create_time
    from news_headline h
           inner join news_type t on h.type = t.tid
           inner join news_user u on h.publisher = u.user_id
    where h.hid = #{hid}
      and h.is_deleted = 0;
  </select>

</mapper>
